deployKF_helpers:
  deploykf_gateway:
    http_endpoint: "deploykf.example.com:8080"
    https_endpoint: "deploykf.example.com:8443"
    is_self_signed_cert: true

deployKF:
  extraManifests:

  clusterDomain: cluster.local

  certManager:
    clusterIssuer:
      selfSigned:
        injectedConfigMapName: "deploykf-gateway-issuer-root-ca-cert"

  auth:
    namespace: "deploykf-auth"

  gateway:
    namespace: "deploykf-istio-gateway"
    serviceAccount: "deploykf-gateway"
    name: "deploykf-gateway"
    hostname: "deploykf.example.com"
    tls:
      enabled: true


########################################
## COMPONENT | minio
########################################
minio:
  ## configs for the minio container image
  ##
  image:
    repository: "docker.io/minio/minio"
    tag: "RELEASE.2023-06-29T05-12-28Z"
    pullPolicy: "IfNotPresent"
    pullSecret: ""
    uid: 1000
    gid: 1000

  ## configs for the mc container image
  ##
  mcImage:
    repository: "docker.io/minio/mc"
    tag: "RELEASE.2023-06-28T21-54-17Z"
    pullPolicy: "IfNotPresent"
    pullSecret: ""
    uid: 1000
    gid: 1000

  ## configs for the kubectl container image
  ##
  kubectlImage:
    repository: "docker.io/bitnami/kubectl"
    tag: "1.26.6-debian-11-r1"
    pullPolicy: "IfNotPresent"
    pullSecret: ""
    uid: 1000
    gid: 1000

  ## resource requests/limits for the minio Pods
  ## - spec for ResourceRequirements:
  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#resourcerequirements-v1-core
  ##
  resources: {}

  ## persistence configs for minio
  ##
  persistence:
    enabled: true

    ## the name of an existing PersistentVolumeClaim to use
    ## - if non-emtpy, you must manually create a PVC with this name
    ##
    existingClaim: ""

    ## the sub-path within the PersistentVolume to mount, instead of the root
    ##
    subPath: ""

    ## the name of the StorageClass requested by the PersistentVolumeClaim
    ## - if set to "", then `PersistentVolumeClaim/spec.storageClassName` is omitted
    ## - if set to "-", then `PersistentVolumeClaim/spec.storageClassName` is set to ""
    ##
    storageClass: ""

    ## the access mode of the PersistentVolumeClaim
    ##
    accessMode: "ReadWriteOnce"

    ## the initial size for the PersistentVolumeClaim to request
    ## - if your StorageClass has `allowVolumeExpansion=true`, kubernetes allows the
    ##   PVC to grow in size as needed, starting from this value
    ##
    size: "5Gi"

  ## root user configs for minio
  ##
  rootUser:
    username: "minioadmin"
    password: "minioadmin"
    existingSecret: ""
    existingSecretUsernameKey: "username"
    existingSecretPasswordKey: "password"

    ## service accounts for the root user
    ##  - these service accounts are created and/or updated by a post-install job
    ##
    serviceAccounts: [{"existingSecret":"kubeflow-pipelines--object-store-auth--team-1","existingSecretAccessKeyKey":"accesskey","existingSecretSecretKeyKey":"secretkey","generateSecret":true,"policy":{"Statement":[{"Action":["s3:GetBucketLocation"],"Effect":"Allow","Resource":["arn:aws:s3:::kubeflow-pipelines"]},{"Action":["s3:GetObject","s3:PutObject","s3:DeleteObject"],"Effect":"Allow","Resource":["arn:aws:s3:::kubeflow-pipelines/artifacts/team-1/*","arn:aws:s3:::kubeflow-pipelines/v2/artifacts/team-1/*"]},{"Action":["s3:ListBucket"],"Condition":{"StringLike":{"s3:prefix":["artifacts/team-1/*","v2/artifacts/team-1/*"]}},"Effect":"Allow","Resource":["arn:aws:s3:::kubeflow-pipelines"]}],"Version":"2012-10-17"}},{"existingSecret":"kubeflow-pipelines--object-store-auth--team-1-prod","existingSecretAccessKeyKey":"accesskey","existingSecretSecretKeyKey":"secretkey","generateSecret":true,"policy":{"Statement":[{"Action":["s3:GetBucketLocation"],"Effect":"Allow","Resource":["arn:aws:s3:::kubeflow-pipelines"]},{"Action":["s3:GetObject","s3:PutObject","s3:DeleteObject"],"Effect":"Allow","Resource":["arn:aws:s3:::kubeflow-pipelines/artifacts/team-1-prod/*","arn:aws:s3:::kubeflow-pipelines/v2/artifacts/team-1-prod/*"]},{"Action":["s3:ListBucket"],"Condition":{"StringLike":{"s3:prefix":["artifacts/team-1-prod/*","v2/artifacts/team-1-prod/*"]}},"Effect":"Allow","Resource":["arn:aws:s3:::kubeflow-pipelines"]}],"Version":"2012-10-17"}}]

  ## identity configs for minio
  ##
  identity:

    ## OpenID configs for minio
    ##
    openid:
      displayName: "deployKF Auth"
      policyClaim: "aud"
      scopes: "openid,email,groups,profile,offline_access"
      clientId: "minio-console"
      clientSecret:
        value: "bbbbbbbbbbbbbbbb"
        existingSecret: "cloned--minio-openid-secret"
        existingSecretKey: "client_secret"

  ## minio buckets
  ##  - these buckets are created and/or updated by a post-install job
  ##
  buckets: [{"name":"kubeflow-pipelines","versioning":false}]

  ## minio access policies
  ##  - these policies are created and/or updated by a post-install job
  ##
  policies: [{"name":"minio-console","policy":{"statement":[{"action":["admin:*"],"effect":"Allow"},{"action":["kms:*"],"effect":"Allow"},{"action":["s3:*"],"effect":"Allow","resource":["arn:aws:s3:::*"]}],"version":"2012-10-17"}}]