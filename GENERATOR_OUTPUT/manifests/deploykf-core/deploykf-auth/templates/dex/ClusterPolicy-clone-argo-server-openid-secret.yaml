{{- if and .Values.dex.clients.argoServer.enabled .Values.dex.clients.argoServer.clientSecret.existingSecret }}
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: deploykf-auth--clone-argo-server-openid-secret
  labels:
    helm.sh/chart: {{ include "deploykf-auth.labels.chart" . }}
    app.kubernetes.io/name: {{ include "deploykf-auth.labels.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: dex
spec:
  generateExisting: true
  rules:
    - name: clone-argo-server-openid-secret
      match:
        any:
          ## sync into the minio namespace
          - resources:
              kinds:
                - Namespace
              names:
                - {{ .Values.dex.clients.argoServer.namespace | quote }}
      generate:
        apiVersion: v1
        kind: Secret
        name: cloned--argo-server-openid-secret
        namespace: {{ `"{{ request.object.metadata.name }}"` }}
        synchronize: true
        clone:
          namespace: {{ .Release.Namespace | quote }}
          name: {{ .Values.dex.clients.argoServer.clientSecret.existingSecret | quote }}

    ## annotate the cloned resources so that ArgoCD ignores them
    - name: annotate-cloned-argo-server-openid-secret
      match:
        any:
          - resources:
              kinds:
                - Secret
              names:
                - cloned--argo-server-openid-secret
              namespaces:
                - {{ .Values.dex.clients.argoServer.namespace | quote }}
              selector:
                matchLabels:
                  generate.kyverno.io/policy-name: deploykf-auth--clone-argo-server-openid-secret
      mutate:
        patchStrategicMerge:
          metadata:
            annotations:
              argocd.argoproj.io/compare-options: IgnoreExtraneous
{{- end }}