## this ClusterPolicy replaces the `pipelines-profile-controller` from the upstream manifests
## https://github.com/kubeflow/pipelines/tree/2.0.0-alpha.7/manifests/kustomize/base/installs/multi-user/pipelines-profile-controller
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: kubeflow-pipelines--generate-profile-resources
  annotations:
    ## kyverno policies with "generate" cant be updated: https://github.com/kyverno/kyverno/issues/7718
    argocd.argoproj.io/sync-options: Replace=true
spec:
  generateExisting: true
  rules:
    ################################################################################
    ## ConfigMap/metadata-grpc-configmap
    ################################################################################
    - name: ConfigMap--metadata-grpc-configmap
      match:
        any:
          - resources:
              kinds:
                - Namespace
              selector:
                matchLabels:
                  pipelines.kubeflow.org/enabled: "true"
      generate:
        apiVersion: v1
        kind: ConfigMap
        name: metadata-grpc-configmap
        namespace: "{{ request.object.metadata.name }}"
        synchronize: true
        data:
          metadata:
            annotations:
              argocd.argoproj.io/tracking-id: "kf-tools--pipelines:/ConfigMap:{{ request.object.metadata.name }}/metadata-grpc-configmap"
              argocd.argoproj.io/compare-options: "IgnoreExtraneous"
              argocd.argoproj.io/sync-options: "Prune=false"
            labels:
              app.kubernetes.io/instance: "kf-tools--pipelines"
          data:
            METADATA_GRPC_SERVICE_HOST: "metadata-grpc-service.kubeflow"
            METADATA_GRPC_SERVICE_PORT: "8080"

    ################################################################################
    ## Deployment/ml-pipeline-visualizationserver
    ################################################################################
    - name: Deployment--ml-pipeline-visualizationserver
      match:
        any:
          - resources:
              kinds:
                - Namespace
              selector:
                matchLabels:
                  pipelines.kubeflow.org/enabled: "true"
      generate:
        apiVersion: apps/v1
        kind: Deployment
        name: ml-pipeline-visualizationserver
        namespace: "{{ request.object.metadata.name }}"
        synchronize: true
        data:
          metadata:
            annotations:
              argocd.argoproj.io/tracking-id: "kf-tools--pipelines:apps/Deployment:{{ request.object.metadata.name }}/ml-pipeline-visualizationserver"
              argocd.argoproj.io/compare-options: "IgnoreExtraneous"
              argocd.argoproj.io/sync-options: "Prune=false"
            labels:
              app: ml-pipeline-visualizationserver
              app.kubernetes.io/instance: "kf-tools--pipelines"
          spec:
            selector:
              matchLabels:
                app: ml-pipeline-visualizationserver
            template:
              metadata:
                labels:
                  app: ml-pipeline-visualizationserver
              spec:
                serviceAccountName: default-editor
                containers:
                  - name: ml-pipeline-visualizationserver
                    ## NOTE: $(kfp-app-version) is a Kustomize variable which is replaced during Kustomize rendering
                    image: "gcr.io/ml-pipeline/visualization-server:$(kfp-app-version)"
                    imagePullPolicy: IfNotPresent
                    ports:
                      - containerPort: 8888
                    resources:
                      requests:
                        cpu: 50m
                        memory: 200Mi
                      limits:
                        cpu: 500m
                        memory: 1Gi

    ################################################################################
    ## DestinationRule/ml-pipeline-visualizationserver
    ################################################################################
    - name: DestinationRule--ml-pipeline-visualizationserver
      match:
        any:
          - resources:
              kinds:
                - Namespace
              selector:
                matchLabels:
                  pipelines.kubeflow.org/enabled: "true"
      generate:
        apiVersion: networking.istio.io/v1alpha3
        kind: DestinationRule
        name: ml-pipeline-visualizationserver
        namespace: "{{ request.object.metadata.name }}"
        synchronize: true
        data:
          metadata:
            annotations:
              argocd.argoproj.io/tracking-id: "kf-tools--pipelines:networking.istio.io/DestinationRule:{{ request.object.metadata.name }}/ml-pipeline-visualizationserver"
              argocd.argoproj.io/compare-options: "IgnoreExtraneous"
              argocd.argoproj.io/sync-options: "Prune=false"
            labels:
              app.kubernetes.io/instance: "kf-tools--pipelines"
          spec:
            host: ml-pipeline-visualizationserver
            trafficPolicy:
              tls:
                mode: ISTIO_MUTUAL

    ################################################################################
    ## AuthorizationPolicy/ml-pipeline-visualizationserver
    ################################################################################
    - name: AuthorizationPolicy--ml-pipeline-visualizationserver
      match:
        any:
          - resources:
              kinds:
                - Namespace
              selector:
                matchLabels:
                  pipelines.kubeflow.org/enabled: "true"
      generate:
        apiVersion: security.istio.io/v1beta1
        kind: AuthorizationPolicy
        name: ml-pipeline-visualizationserver
        namespace: "{{ request.object.metadata.name }}"
        synchronize: true
        data:
          metadata:
            annotations:
              argocd.argoproj.io/tracking-id: "kf-tools--pipelines:security.istio.io/AuthorizationPolicy:{{ request.object.metadata.name }}/ml-pipeline-visualizationserver"
              argocd.argoproj.io/compare-options: "IgnoreExtraneous"
              argocd.argoproj.io/sync-options: "Prune=false"
            labels:
              app.kubernetes.io/instance: "kf-tools--pipelines"
          spec:
            selector:
              matchLabels:
                app: ml-pipeline-visualizationserver
            rules:
              - from:
                  - source:
                      principals:
                        - cluster.local/ns/kubeflow/sa/ml-pipeline

    ################################################################################
    ## Service/ml-pipeline-visualizationserver
    ################################################################################
    - name: Service--ml-pipeline-visualizationserver
      match:
        any:
          - resources:
              kinds:
                - Namespace
              selector:
                matchLabels:
                  pipelines.kubeflow.org/enabled: "true"
      generate:
        apiVersion: v1
        kind: Service
        name: ml-pipeline-visualizationserver
        namespace: "{{ request.object.metadata.name }}"
        synchronize: true
        data:
          metadata:
            annotations:
              argocd.argoproj.io/tracking-id: "kf-tools--pipelines:/Service:{{ request.object.metadata.name }}/ml-pipeline-visualizationserver"
              argocd.argoproj.io/compare-options: "IgnoreExtraneous"
              argocd.argoproj.io/sync-options: "Prune=false"
            labels:
              app.kubernetes.io/instance: "kf-tools--pipelines"
          spec:
            selector:
              app: ml-pipeline-visualizationserver
            ports:
              - name: http
                port: 8888
                protocol: TCP
                targetPort: 8888

    ################################################################################
    ## Deployment/ml-pipeline-ui-artifact
    ################################################################################
    - name: Deployment--ml-pipeline-ui-artifact
      match:
        any:
          - resources:
              kinds:
                - Namespace
              selector:
                matchLabels:
                  pipelines.kubeflow.org/enabled: "true"
      context:
        - name: tool_config
          configMap:
            name: profile-tools--kubeflow-pipelines
            namespace: "{{ request.object.metadata.name }}"
      generate:
        apiVersion: apps/v1
        kind: Deployment
        name: ml-pipeline-ui-artifact
        namespace: "{{ request.object.metadata.name }}"
        synchronize: true
        data:
          metadata:
            annotations:
              argocd.argoproj.io/tracking-id: "kf-tools--pipelines:apps/Deployment:{{ request.object.metadata.name }}/ml-pipeline-ui-artifact"
              argocd.argoproj.io/compare-options: "IgnoreExtraneous"
              argocd.argoproj.io/sync-options: "Prune=false"
            labels:
              app: ml-pipeline-ui-artifact
              app.kubernetes.io/instance: "kf-tools--pipelines"
          spec:
            selector:
              matchLabels:
                app: ml-pipeline-ui-artifact
            template:
              metadata:
                labels:
                  app: ml-pipeline-ui-artifact
              spec:
                ## NOTE: we use 'default-editor' so this pod has the same access as workflow pods when using "AWS IRSA" or "GCP Workload Identity" plugins
                serviceAccountName: default-editor
                securityContext:
                  ## NOTE: this is important for AWS IRSA
                  fsGroup: 65534
                containers:
                  - name: ml-pipeline-ui-artifact
                    ## NOTE: $(kfp-app-version) is a Kustomize variable which is replaced during Kustomize rendering
                    image: "gcr.io/ml-pipeline/frontend:$(kfp-app-version)"
                    imagePullPolicy: IfNotPresent
                    ports:
                      - containerPort: 3000
                    resources:
                      requests:
                        cpu: 10m
                        memory: 70Mi
                      limits:
                        cpu: 100m
                        memory: 500Mi
                    env:
                      ## ================================
                      ## Minio - Object Store Configs
                      ## ================================
                      - name: MINIO_NAMESPACE
                        ## must be empty, or kubeflow pipelines will attempt to append the namespace to MINIO_HOST
                        value: ""
                      - name: MINIO_HOST
                        value: "deploykf-minio-api.deploykf-minio.svc.cluster.local"
                      - name: MINIO_PORT
                        value: "9000"
                      - name: MINIO_SSL
                        value: "false"
                      - name: MINIO_ACCESS_KEY
                        valueFrom:
                          secretKeyRef:
                            name: "mlpipeline-minio-artifact"
                            key: "{{ tool_config.data.objectStoreAuth_existingSecretAccessKeyKey }}"
                      - name: MINIO_SECRET_KEY
                        valueFrom:
                          secretKeyRef:
                            name: "mlpipeline-minio-artifact"
                            key: "{{ tool_config.data.objectStoreAuth_existingSecretSecretKeyKey }}"

                      ## ================================
                      ## S3 - Object Store Configs
                      ## ================================
                      - name: AWS_REGION
                        value: ""
                      - name: AWS_S3_ENDPOINT
                        value: "deploykf-minio-api.deploykf-minio.svc.cluster.local:9000"
                      - name: AWS_ACCESS_KEY_ID
                        valueFrom:
                          secretKeyRef:
                            name: "mlpipeline-minio-artifact"
                            key: "{{ tool_config.data.objectStoreAuth_existingSecretAccessKeyKey }}"
                      - name: AWS_SECRET_ACCESS_KEY
                        valueFrom:
                          secretKeyRef:
                            name: "mlpipeline-minio-artifact"
                            key: "{{ tool_config.data.objectStoreAuth_existingSecretSecretKeyKey }}"

    ################################################################################
    ## Service/ml-pipeline-ui-artifact
    ################################################################################
    - name: Service--ml-pipeline-ui-artifact
      match:
        any:
          - resources:
              kinds:
                - Namespace
              selector:
                matchLabels:
                  pipelines.kubeflow.org/enabled: "true"
      generate:
        apiVersion: v1
        kind: Service
        name: ml-pipeline-ui-artifact
        namespace: "{{ request.object.metadata.name }}"
        synchronize: true
        data:
          metadata:
            annotations:
              argocd.argoproj.io/tracking-id: "kf-tools--pipelines:/Service:{{ request.object.metadata.name }}/ml-pipeline-ui-artifact"
              argocd.argoproj.io/compare-options: "IgnoreExtraneous"
              argocd.argoproj.io/sync-options: "Prune=false"
            labels:
              app: ml-pipeline-ui-artifact
              app.kubernetes.io/instance: "kf-tools--pipelines"
          spec:
            selector:
              app: ml-pipeline-ui-artifact
            ports:
              - name: http
                port: 80
                protocol: TCP
                targetPort: 3000

    ################################################################################
    ## ConfigMap/artifact-repositories
    ################################################################################
    - name: ConfigMap--artifact-repositories
      match:
        any:
          - resources:
              kinds:
                - Namespace
              selector:
                matchLabels:
                  pipelines.kubeflow.org/enabled: "true"
      context:
        - name: tool_config
          configMap:
            name: profile-tools--kubeflow-pipelines
            namespace: "{{ request.object.metadata.name }}"
      generate:
        apiVersion: v1
        kind: ConfigMap
        name: artifact-repositories
        namespace: "{{ request.object.metadata.name }}"
        synchronize: true
        data:
          metadata:
            annotations:
              workflows.argoproj.io/default-artifact-repository: default-v1
              argocd.argoproj.io/tracking-id: "kf-tools--pipelines:/ConfigMap:{{ request.object.metadata.name }}/artifact-repositories"
              argocd.argoproj.io/compare-options: "IgnoreExtraneous"
              argocd.argoproj.io/sync-options: "Prune=false"
            labels:
              app.kubernetes.io/instance: "kf-tools--pipelines"
          data:
            default-v1: |
              archiveLogs: true
              s3:
                endpoint: "deploykf-minio-api.deploykf-minio.svc.cluster.local:9000"
                insecure: true
                bucket: "kubeflow-pipelines"
                region: ""
                ## NOTE: we must escape with "\{{" because Kyverno uses the same template delimiters as argo
                keyFormat: "artifacts/\{{ workflow.namespace }}/\{{ workflow.name }}/\{{ workflow.creationTimestamp.Y }}/\{{ workflow.creationTimestamp.m }}/\{{ workflow.creationTimestamp.d }}/\{{ pod.name }}"
                accessKeySecret:
                  name: "mlpipeline-minio-artifact"
                  key: "{{ tool_config.data.objectStoreAuth_existingSecretAccessKeyKey }}"
                secretKeySecret:
                  name: "mlpipeline-minio-artifact"
                  key: "{{ tool_config.data.objectStoreAuth_existingSecretSecretKeyKey }}"

    ################################################################################
    ## ConfigMap/kfp-launcher
    ################################################################################
    - name: ConfigMap--kfp-launcher
      match:
        any:
          - resources:
              kinds:
                - Namespace
              selector:
                matchLabels:
                  pipelines.kubeflow.org/enabled: "true"
      generate:
        apiVersion: v1
        kind: ConfigMap
        name: kfp-launcher
        namespace: "{{ request.object.metadata.name }}"
        synchronize: true
        data:
          metadata:
            annotations:
              argocd.argoproj.io/tracking-id: "kf-tools--pipelines:/ConfigMap:{{ request.object.metadata.name }}/kfp-launcher"
              argocd.argoproj.io/compare-options: "IgnoreExtraneous"
              argocd.argoproj.io/sync-options: "Prune=false"
            labels:
              app.kubernetes.io/instance: "kf-tools--pipelines"
          data:
            defaultPipelineRoot: "minio://kubeflow-pipelines/v2/artifacts/{{ request.object.metadata.name }}"