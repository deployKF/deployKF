## TODO: replace all instances of 'cluster.local' with this (might need a lot of patches)
##       (consider putting under a "kubernetes" section, also for other things like default node selectors)
#clusterDomain: cluster.local

## --------------------------------------------------------------------------------
##
##                                      argocd
##
## --------------------------------------------------------------------------------
argocd:
  namespace: argocd
  project: default
  source:
    repo:
      url: ""
      revision: ""
      path: ""
  destination:
    server: https://kubernetes.default.svc


## --------------------------------------------------------------------------------
##
##                              deploykf-dependencies
##
## --------------------------------------------------------------------------------
deploykf_dependencies:

  ## --------------------------------------
  ##             cert-manager
  ## --------------------------------------
  cert_manager:
    enabled: true
    namespace: cert-manager

    ## values overrides
    ##  - [WARNING] it is very easy to break something with this feature
    ##  - a map or string with values to override those generated by deployKF
    ##  - strings can include deployKF templates `{{< ... >}}`
    ##
    valuesOverrides: {}

    ## extra manifests
    ##  - a list of strings containing extra Kubernetes resource manifests
    ##  - strings can include deployKF templates `{{< ... >}}` and Helm templates `{{ ... }}`
    ##
    extraManifests: []

    ## chart overrides
    ##
    charts:
      certManager:
        name: cert-manager
        version: 1.11.2
        repository: https://charts.jetstack.io

      trustManager:
        name: trust-manager
        version: 0.4.0
        repository: https://charts.jetstack.io

    ## image overrides
    ##
    images:
      certManagerController:
        repository: quay.io/jetstack/cert-manager-controller
        tag: ~
        pullPolicy: IfNotPresent

      certManagerWebhook:
        repository: quay.io/jetstack/cert-manager-webhook
        tag: ~
        pullPolicy: IfNotPresent

      certManagerCainjector:
        repository: quay.io/jetstack/cert-manager-cainjector
        tag: ~
        pullPolicy: IfNotPresent

      certManagerAcmesolver:
        repository: quay.io/jetstack/cert-manager-acmesolver
        tag: ~

      certManagerCtl:
        repository: quay.io/jetstack/cert-manager-ctl
        tag: ~
        pullPolicy: IfNotPresent

      trustManager:
        repository: quay.io/jetstack/trust-manager
        tag: ~
        pullPolicy: IfNotPresent

      trustManagerDefaultPackage:
        repository: quay.io/jetstack/cert-manager-package-debian
        tag: ~
        pullPolicy: IfNotPresent

    ## cert-manager controller configs
    ##
    controller:

      ## PodSecurityContext configs
      ##
      securityContext:
        fsGroup: 1001

      ## ServiceAccount configs
      ##  - TODO: document using with AWS IRSA + route53 (and similar)
      ##    https://cert-manager.io/docs/configuration/acme/dns01/route53/
      ##
      serviceAccount:
        create: true
        name: "cert-manager"
        annotations: {}

      ## extra command line args
      ##  - https://cert-manager.io/v1.11-docs/cli/controller/
      ##
      extraArgs:
        ## automatically remove generated secrets when the certificate resource is deleted
        - --enable-certificate-owner-ref=true

    ## istio gateway certificate issuer configs
    ##
    clusterIssuer:
      enabled: true
      issuerName: deploykf-gateway-issuer

      ## TODO: support other kinds of cluster issuers
      type: SELF_SIGNED

      selfSigned:
        caIssuerName: selfsigned-ca-issuer
        caSecretName: selfsigned-ca-issuer-root-cert

        ## using trust-manager, each Namespace with the "deploykf.github.io/inject-root-ca-cert=enabled" label
        ## is injected with a ConfigMap containing a "root-cert.pem" key that contains the self-signed root CA
        ## applications can then trust the issued gateway certificates by trusting this CA
        injectedConfigMapName: deploykf-gateway-issuer-root-ca-cert


  ## --------------------------------------
  ##                 istio
  ## --------------------------------------
  istio:
    enabled: true
    namespace: istio-system

    ## values overrides
    ##  - [WARNING] it is very easy to break something with this feature
    ##  - a map or string with values to override those generated by deployKF
    ##  - strings can include deployKF templates `{{< ... >}}`
    ##
    valuesOverrides: {}

    ## extra manifests
    ##  - a list of strings containing extra Kubernetes resource manifests
    ##  - strings can include deployKF templates `{{< ... >}}` and Helm templates `{{ ... }}`
    ##
    extraManifests: []

    ## chart overrides
    ##
    charts:
      istioBase:
        name: base
        version: 1.17.2
        repository: https://istio-release.storage.googleapis.com/charts

      istioDaemon:
        name: istiod
        version: 1.17.2
        repository: https://istio-release.storage.googleapis.com/charts

    ## image overrides
    ##  - when tag is unset, default is: "{charts.istioDaemon.version}-{images.defaultImageVariant}"
    ##
    images:
      istioProxy:
        repository: docker.io/istio/proxyv2
        tag: ~

      istioPilot:
        repository: docker.io/istio/pilot
        tag: ~

    ## the default image variant
    ##  - can be one of: ["", "debug", "distroless"]
    ##    https://istio.io/latest/docs/ops/configuration/security/harden-docker-images/
    ##
    defaultImageVariant: distroless

    ## istio sidecar injector webhook configs
    ##
    sidecarInjectorWebhook:

      ## additional annotations which are added to pods after sidecar injection
      ##
      injectedAnnotations: {}

    ## istio mesh configs
    ##  - NOTE: deployKF will override some configs with the required values, even if they are set here
    ##
    meshConfig:
      ## TODO: disable after development (as it prints all istio access logs to STDOUT)
      accessLogFile: /dev/stdout


  ## --------------------------------------
  ##                kyverno
  ## --------------------------------------
  kyverno:
    enabled: true
    namespace: kyverno

    ## values overrides
    ##  - [WARNING] it is very easy to break something with this feature
    ##  - a map or string with values to override those generated by deployKF
    ##  - strings can include deployKF templates `{{< ... >}}`
    ##
    valuesOverrides: {}

    ## extra manifests
    ##  - a list of strings containing extra Kubernetes resource manifests
    ##  - strings can include deployKF templates `{{< ... >}}` and Helm templates `{{ ... }}`
    ##
    extraManifests: []

    ## chart overrides
    ##
    charts:
      kyverno:
        name: kyverno
        ## NOTE: kyverno's chart versions are NOT aligned to the kyverno app version, see:
        ##       https://artifacthub.io/packages/helm/kyverno/kyverno
        version: 3.0.0-rc.1
        repository: https://kyverno.github.io/kyverno

    ## image overrides
    ##
    images:
      kubectl:
        repository: docker.io/bitnami/kubectl
        tag: ~
        pullPolicy: IfNotPresent

      kyverno:
        repository: ghcr.io/kyverno/kyverno
        tag: ~
        pullPolicy: IfNotPresent

      kyvernoInit:
        repository: ghcr.io/kyverno/kyvernopre
        tag: ~
        pullPolicy: IfNotPresent

      kyvernoBackgroundController:
        repository: ghcr.io/kyverno/background-controller
        tag: ~
        pullPolicy: IfNotPresent

      kyvernoCleanupController:
        repository: ghcr.io/kyverno/cleanup-controller
        tag: ~
        pullPolicy: IfNotPresent

      kyvernoReportsController:
        repository: ghcr.io/kyverno/reports-controller
        tag: ~
        pullPolicy: IfNotPresent

    ## kyverno extra resource permissions
    ##  - a list of extra kubernetes resources to allow kyverno to generate and manage
    ##  - each element is a map with keys `apiGroups` and `resources` that contain lists of strings
    ##
    extraResourceRules:
      - apiGroups: [ "kubeflow.org" ]
        resources: [ "poddefaults" ]


## --------------------------------------------------------------------------------
##
##                                  deploykf-core
##
## --------------------------------------------------------------------------------
deploykf_core:

  ## --------------------------------------
  ##             deploykf-auth
  ## --------------------------------------
  deploykf_auth:
    enabled: true
    namespace: deploykf-auth

    ## values overrides
    ##  - [WARNING] it is very easy to break something with this feature
    ##  - a map or string with values to override those generated by deployKF
    ##  - strings can include deployKF templates `{{< ... >}}`
    ##
    valuesOverrides: {}

    ## extra manifests
    ##  - a list of strings containing extra Kubernetes resource manifests
    ##  - strings can include deployKF templates `{{< ... >}}` and Helm templates `{{ ... }}`
    ##
    extraManifests: []

    ## image overrides
    ##
    images:
      dex:
        repository: ghcr.io/dexidp/dex
        tag: v2.36.0
        pullPolicy: IfNotPresent

      oauth2Proxy:
        repository: quay.io/oauth2-proxy/oauth2-proxy
        tag: v7.4.0
        pullPolicy: IfNotPresent

    ## dex configs
    ##
    dex:

      ## static passwords
      ##  - a list of users to create in dex's built-in password database
      ##  - each element is a map with keys `email` and `password`,
      ##    the `password` is a map with the following keys:
      ##     - `value`: the password value
      ##     - `existingSecret`: the name of a kubernetes secret containing the password (overrides `value`)
      ##     - `existingSecretKey`: the key in the secret that contains the password
      ##     - `type`: how the password is provided (default: "plain")
      ##         - "plain": the password is provided as plain text
      ##         - "hash": the password is provided as a bcrypt hash
      ##  - a bcrypt hash for "PASSWORD_STRING" can be generated with one of the following:
      ##     - echo "PASSWORD_STRING" | htpasswd -BinC 10 NULL | cut -d: -f2
      ##     - python -c 'import bcrypt; print(bcrypt.hashpw(b"PASSWORD_STRING", bcrypt.gensalt(10)).decode())'
      ##
      staticPasswords:
        - email: "admin@example.com"
          password:
            value: "admin"
        - email: "user1@example.com"
          password:
            value: "user1"
        - email: "user2@example.com"
          password:
            value: "user2"

      ## connectors
      ##  - dex connectors which allow bridging trust to external identity providers
      ##    https://dexidp.io/docs/connectors/
      ##  - not all connector types support refresh tokens, notably "SAML 2.0" and "OAUTH 2.0" do not
      ##    however, most providers support "OpenID Connect" which does support refresh tokens
      ##    without refresh tokens, users will be forced to re-authenticate every `expiry.idToken` period
      ##  - each element is a map with keys `type`, `id`, `name`, and `config` (which are the same aas upstream dex)
      ##    additionally, `configExistingSecret` and `configExistingSecretKey` allow you to set `config`
      ##    from a YAML-formatted string in a kubernetes secret
      ##  - in most cases `config.redirectURI` will be set to "https://{DEPLOYKF_HOST}/dex/callback" (if port is 443)
      ##
      connectors: []

      ## token expiry configs
      ##  - times are in Go duration format: https://golang.org/pkg/time/#ParseDuration
      ##
      expiry:
        ## the lifetime of issued id tokens
        idToken: "60m"

        ## refresh token configs
        ##  - NOTE: some dex connectors do NOT support refresh tokens
        ##
        refreshToken:
          ## max time since last use of a refresh token
          idle: "168h" # 7d

          ## max total lifetime of a refresh token
          total: "2160h" # 90d

      ## OpenID Connect clients
      ##  - [WARNING] it is strongly recommended to use custom `clientSecret` values
      ##  - a random `clientSecret` can be generated with one of the following:
      ##     - echo $(head -c32 /dev/urandom | base64 | tr -d '\n')
      ##     - python -c 'import os,base64; print(base64.urlsafe_b64encode(os.urandom(32)).decode())'
      ##
      clients:

        ## OpenID client for oauth2-proxy (deployKF Dashboard)
        ##
        oauth2Proxy:
          clientId: "oauth2-proxy"
          clientSecret:
            value: "bbbbbbbbbbbbbbbb"
            existingSecret: ""
            existingSecretKey: "client_secret"

        ## OpenID client for Minio Console
        ##
        minioConsole:
          clientId: "minio-console"
          clientSecret:
            value: "bbbbbbbbbbbbbbbb"
            existingSecret: ""
            existingSecretKey: "client_secret"

    ## oauth2-proxy configs
    ##
    oauth2Proxy:

      ## cookie configs
      ##
      cookie:
        ## sets oauth2-proxy config `--cookie-name`
        name: "_deploykf_token"

        ## sets oauth2-proxy config `--cookie-expire`
        expire: "168h" # 7d

        ## sets oauth2-proxy config `--cookie-refresh`
        refresh: "60m"

        ## sets oauth2-proxy config `--cookie-secret`
        ## [WARNING] it is strongly recommended to override this value, generate using one of:
        ##  - echo $(head -c32 /dev/urandom | base64 | tr -d '\n')
        ##  - python -c 'import os,base64; print(base64.urlsafe_b64encode(os.urandom(32)).decode())'
        secret:
          value: "cccccccccccccccc"
          existingSecret: ""
          existingSecretKey: "cookie_secret"


  ## --------------------------------------
  ##          deploykf-dashboard
  ## --------------------------------------
  deploykf_dashboard:
    enabled: true
    namespace: deploykf-dashboard

    ## values overrides
    ##  - [WARNING] it is very easy to break something with this feature
    ##  - a map or string with values to override those generated by deployKF
    ##  - strings can include deployKF templates `{{< ... >}}`
    ##
    valuesOverrides: {}

    ## extra manifests
    ##  - a list of strings containing extra Kubernetes resource manifests
    ##  - strings can include deployKF templates `{{< ... >}}` and Helm templates `{{ ... }}`
    ##
    extraManifests: []

    ## image overrides
    ##
    images:
      dashboard:
        ## TODO: replace with non-ci image
        repository: ghcr.io/deploykf/ci/dashboard
        tag: sha-f7b4239
        pullPolicy: IfNotPresent

      profileController:
        repository: kubeflownotebookswg/profile-controller
        tag: v1.7.0
        pullPolicy: IfNotPresent

      kfamApi:
        repository: kubeflownotebookswg/kfam
        tag: v1.7.0
        pullPolicy: IfNotPresent

    ## configs dashboard navigation
    ##
    navigation:

      ## external links that appear in the sidebar
      ##  - a list of extra links to appear in the dashboard sidebar
      ##  - each element is a map with the following keys:
      ##     - `text`: the text that appears in the sidebar (example: "deployKF")
      ##     - `url`: the url to navigate to when the link is clicked (example: "https://deploykf.org")
      ##     - `icon`: the icon that appears in the sidebar (example: "launch")
      ##        - can be any "iron-icon" name, include any "xxxx:" prefix, but not "icons:"
      ##          https://www.webcomponents.org/element/@polymer/iron-icons/demo/demo/index.html
      ##
      externalLinks: []

  ## --------------------------------------
  ##        deploykf-istio-gateway
  ## --------------------------------------
  deploykf_istio_gateway:
    enabled: true
    namespace: deploykf-istio-gateway

    ## values overrides
    ##  - [WARNING] it is very easy to break something with this feature
    ##  - a map or string with values to override those generated by deployKF
    ##  - strings can include deployKF templates `{{< ... >}}`
    ##
    valuesOverrides: {}

    ## extra manifests
    ##  - a list of strings containing extra Kubernetes resource manifests
    ##  - strings can include deployKF templates `{{< ... >}}` and Helm templates `{{ ... }}`
    ##
    extraManifests: []

    ## chart overrides
    ##
    charts:
      istioGateway:
        ## if false, you must create your own istio gateway ~deployment~ and ~service~
        ##  - you do NOT need to create resources like `networking.istio.io/Gateway`
        ##  - you must set the other values to match your deployment,
        ##    otherwise deployKF will be unable to use them
        enabled: true
        name: gateway
        version: 1.17.2
        repository: https://istio-release.storage.googleapis.com/charts

    ## istio gateway configs
    ##
    gateway:
      name: deploykf-gateway

      hostname: deploykf.example.com
      ports:
        ## TODO: consider making 80/443 the default (+ dont forget to test 80/443)
        http: 8080
        https: 8443
      tls:
        enabled: true

      ## the pod labels used by the gateway to find the ingress gateway deployment
      ##
      selectorLabels:
        app: deploykf-gateway
        istio: deploykf-gateway

      ## if the "PROXY Protocol" is enabled on the gateway
      ## - https://istio.io/v1.16/docs/ops/configuration/traffic-management/network-topologies/#proxy-protocol
      ##
      enableProxyProtocol: false

      ## the number of x-forwarded-for HTTP header hops to trust
      ##  - important if using a LoadBalancer (like AWS NLB) as the Service type of deploykf-istio-gateway
      ##
      ## TODO: this should probably be 0 by default
      xffNumTrustedHops: 1

      ## if the email passed in `X-Auth-Request-Email` by `oauth2-proxy` is cast to lowercase
      ##  - this may be helpful if your identity system returns emails with uppercase letters and you
      ##    want to standardize on lowercase emails for RoleBindings
      ##  - this value will also affect the profiles generated by `deploykf-profiles-generator`
      ##
      emailToLowercase: false

    ## istio gateway deployment configs
    ##
    gatewayDeployment:
      replicaCount: 1

      serviceAccount:
        name: deploykf-gateway
        annotations: {}

      autoscaling:
        enabled: true
        minReplicas: 1
        maxReplicas: 5
        targetCPUUtilizationPercentage: 80

      podAnnotations: {}

    ## istio gateway service configs
    ##
    gatewayService:
      name: deploykf-gateway
      annotations: {}
      type: LoadBalancer
      loadBalancerIP: ""
      loadBalancerSourceRanges: []


  ## --------------------------------------
  ##      deploykf-profiles-generator
  ## --------------------------------------
  deploykf_profiles_generator:
    enabled: true

    ## values overrides
    ##  - [WARNING] it is very easy to break something with this feature
    ##  - a map or string with values to override those generated by deployKF
    ##  - strings can include deployKF templates `{{< ... >}}`
    ##
    valuesOverrides: {}

    ## extra manifests
    ##  - a list of strings containing extra Kubernetes resource manifests
    ##  - strings can include deployKF templates `{{< ... >}}` and Helm templates `{{ ... }}`
    ##
    extraManifests: []

    ## profile defaults
    ##
    profileDefaults:

      ## a common prefix to add to all profile names
      ##
      profileNamePrefix: ""

      ## the default email to set as the OWNER of profiles
      ##  - [WARNING] treat this as a super-admin service account,
      ##              that is, people should not use this account day-to-day
      ##  - [WARNING] changing the owner of an existing profile is currently a manual process
      ##              https://github.com/kubeflow/kubeflow/issues/6576
      ##
      ownerEmail: "admin@example.com"

      ## the default access for members of profiles
      ##
      memberAccess:

        ## the default RBAC role to bind to members
        ##  - "edit" -> `ClusterRole/kubeflow-edit` -> can view/create/delete resources
        ##  - "view" -> `ClusterRole/kubeflow-view` -> can only view resources
        ##
        role: view

        ## if the user can ~connect~ to notebooks in the profile
        notebooksAccess: false

      ## the default plugins for profiles
      ##  - available plugin "kinds":
      ##     - "AwsIamForServiceAccount":
      ##        https://github.com/kubeflow/kubeflow/blob/v1.7.0/components/profile-controller/controllers/plugin_iam.go#L30
      ##     - "WorkloadIdentity":
      ##        https://github.com/kubeflow/kubeflow/blob/v1.7.0/components/profile-controller/controllers/plugin_workload_identity.go#L39
      ##
      ## ____ EXAMPLE _______________
      ##  plugins:
      ##    - ## EKS IRSA plugin
      ##      kind: AwsIamForServiceAccount
      ##      spec:
      ##        awsIamRole: arn:aws:iam::000000000000:role/MY_ROLE_NAME
      ##        AnnotateOnly: true
      ##
      ##    - ## GKE WorkloadIdentity plugin
      ##      kind: WorkloadIdentity
      ##      spec:
      ##        gcpServiceAccount: SA_NAME@PROJECT_ID.iam.gserviceaccount.com
      ##
      plugins: []

      ## the resource quota for this profile
      ##  - spec for ResourceQuotaSpec:
      ##    https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#resourcequotaspec-v1-core
      ##
      resourceQuotaSpec: {}

    ## user entities
    ##  - a list of user entities to be referenced by `id` when defining profiles
    ##
    users:
      - id: user-1
        email: "user1@example.com"
      - id: user-2
        email: "user2@example.com"

    ## profile definitions
    ##
    profiles:
      - name: team-1

        ## the list of members and their access to this profile
        ##  - `user`: the `id` of the user from the `users` list
        ##  - `role`: the RBAC role to bind to the user ("edit" or "view")
        ##  - `notebooksAccess`: if the user can ~connect~ to notebooks in the profile
        members:
          - user: user-1
            role: edit
            notebooksAccess: true
          - user: user-2
            role: edit
            notebooksAccess: true

        ## override `profileDefaults.ownerEmail` for this profile
        ownerEmail: ~

        ## override `profileDefaults.plugins` for this profile
        plugins: []

        ## override `profileDefaults.resourceQuotaSpec` for this profile
        resourceQuotaSpec: {}

      - name: team-1-prod
        members:
          - user: user-1
            role: view
            notebooksAccess: false
          - user: user-2
            role: view
            notebooksAccess: false


## --------------------------------------------------------------------------------
##
##                                   deploykf-opt
##
## --------------------------------------------------------------------------------
deploykf_opt:

  ## --------------------------------------
  ##            deploykf-minio
  ## --------------------------------------
  deploykf_minio:
    enabled: true
    namespace: deploykf-minio

    ## values overrides
    ##  - [WARNING] it is very easy to break something with this feature
    ##  - a map or string with values to override those generated by deployKF
    ##  - strings can include deployKF templates `{{< ... >}}`
    ##
    valuesOverrides: {}

    ## extra manifests
    ##  - a list of strings containing extra Kubernetes resource manifests
    ##  - strings can include deployKF templates `{{< ... >}}` and Helm templates `{{ ... }}`
    ##
    extraManifests: []

    ## image overrides
    ##
    images:
      minio:
        repository: docker.io/minio/minio
        tag: RELEASE.2023-05-18T00-05-36Z
        pullPolicy: IfNotPresent

      minioMc:
        repository: docker.io/minio/mc
        tag: RELEASE.2023-05-18T16-59-00Z
        pullPolicy: IfNotPresent

    ## persistence configs
    ##
    persistence:
      enabled: true

      ## the name of an existing PersistentVolumeClaim to use
      ## - if non-emtpy, you must manually create a PVC with this name
      ##
      existingClaim: ""

      ## the sub-path within the PersistentVolume to mount, instead of the root
      ##
      subPath: ""

      ## the name of the StorageClass requested by the PersistentVolumeClaim
      ## - if set to "", then `PersistentVolumeClaim/spec.storageClassName` is omitted
      ## - if set to "-", then `PersistentVolumeClaim/spec.storageClassName` is set to ""
      ##
      storageClass: ""

      ## the access mode of the PersistentVolumeClaim
      ##
      accessMode: ReadWriteOnce

      ## the initial size for the PersistentVolumeClaim to request
      ## - if your StorageClass has `allowVolumeExpansion=true`, kubernetes allows the
      ##   PVC to grow in size as needed, starting from this value
      ##
      size: 5Gi

    ## root user configs for minio
    ##  - [WARNING] it is strongly recommended to override these values
    ##  - [WARNING] the root account is used in post-install jobs to create buckets and policies
    ##              however, it remains active and usable after install
    ##
    rootUser:
      username: minioadmin
      password: minioadmin
      existingSecret: ""
      existingSecretUsernameKey: "username"
      existingSecretPasswordKey: "password"

    ## identity configs
    ##
    identity:

      ## OpenID Connect configs (connects to `deploykf-auth` dex)
      ##
      openid:
        ## sets `MINIO_IDENTITY_OPENID_CLAIM_NAME`
        ## TODO: explain how this can be set to "groups" when using LDAP/OAUTH as your dex connector
        policyClaim: "aud"

        ## sets `MINIO_IDENTITY_OPENID_SCOPES`
        ## TODO: minio-console does not yet support refresh tokens: https://github.com/minio/console/issues/2643
        scopes: "openid,email,groups,profile,offline_access"

    ## minio buckets
    ##  - these buckets are created and/or updated by a post-install job
    ##  - each element is a map with the following keys:
    ##     - `name`: the name of the bucket
    ##     - `versioning`: the name of the policy to apply to the bucket
    ##  - if Kubeflow Pipelines is enabled, a bucket named `kubeflow_tools.pipelines.bucket.name`
    ##    is automatically added to this list, with `versioning` disabled
    ##
    buckets: []

    ## minio access policies
    ##  - these policies are created and/or updated by a post-install job,
    ##  - each element is a map with the following keys:
    ##     - `name`: the name of the policy
    ##     - `policy`: the policy document (as a YAML map)
    ##  - minio policies are explained here:
    ##    https://min.io/docs/minio/container/administration/identity-access-management/policy-based-access-control.html
    ##
    policies:
      ## TODO: explain why this policy is called "minio-console"
      ##       (because `identity.openid.policyClaim` is set to "aud")
      - name: minio-console
        policy:
          version: "2012-10-17"
          ## TODO: can we use policy conditions to assign access based on email (rather than all users getting this policy)
          ##       https://min.io/docs/minio/linux/administration/identity-access-management/policy-based-access-control.html#supported-s3-policy-condition-keys
          statement:
            - effect: Allow
              action:
                - "admin:*"
            - effect: Allow
              action:
                - "kms:*"
            - effect: Allow
              action:
                - "s3:*"
              resource:
                - "arn:aws:s3:::*"

  ## --------------------------------------
  ##            deploykf-mysql
  ## --------------------------------------
  deploykf_mysql:
    enabled: true
    namespace: deploykf-mysql

    ## configs for the "root@localhost" mysql user
    ## (used for liveness probes)
    rootUser:
      password: password
      existingSecret: ""
      existingSecretPasswordKey: "password"

    ## configs for the "kubeflow" mysql user
    ## (used by kubeflow apps)
    kubeflowUser:
      username: kubeflow
      password: password
      existingSecret: ""
      existingSecretUsernameKey: "username"
      existingSecretPasswordKey: "password"


## --------------------------------------------------------------------------------
##
##                                deploykf-tools
##
## --------------------------------------------------------------------------------
## TODO: add deploykf-tools
deploykf_tools: {}


## --------------------------------------------------------------------------------
##
##                              kubeflow-dependencies
##
## --------------------------------------------------------------------------------
kubeflow_dependencies:

  ## --------------------------------------
  ##        kubeflow-argo-workflows
  ## --------------------------------------
  kubeflow_argo_workflows:
    enabled: true
    namespace: kubeflow-argo-workflows


## --------------------------------------------------------------------------------
##
##                                  kubeflow-tools
##
## --------------------------------------------------------------------------------
kubeflow_tools:

  ## --------------------------------------
  ##                 katib
  ## --------------------------------------
  katib:
    enabled: true

    ## NOTE: these values are ignored when `deploykf_opt.deploykf_mysql.enabled` is 'true',
    ##       as we automatically populate the required settings to use the embedded mysql
    mysql:
      host: "mysql.example.com"
      port: 3306
      auth:
        username: kubeflow
        password: password
        existingSecret: ""
        existingSecretUsernameKey: "username"
        existingSecretPasswordKey: "password"

    mysqlDatabase: katib

  ## --------------------------------------
  ##               notebooks
  ## --------------------------------------
  notebooks:
    enabled: true

  ## --------------------------------------
  ##               pipelines
  ## --------------------------------------
  pipelines:
    enabled: true

    bucket:
      name: kubeflow-pipelines
      region: ""

    ## NOTE: these values are ignored when `deploykf_opt.deploykf_minio.enabled` is 'true',
    ##       as we automatically populate the required settings to use the embedded minio
    objectStore:
      host: s3.amazonaws.com
      port: ""
      useSSL: true
      auth:
        accessKey: minioadmin
        secretKey: minioadmin
        existingSecret: ""
        existingSecretAccessKeyKey: "AWS_ACCESS_KEY_ID"
        existingSecretSecretKeyKey: "AWS_SECRET_ACCESS_KEY"

    ## NOTE: these values are ignored when `deploykf_opt.deploykf_mysql.enabled` is 'true',
    ##       as we automatically populate the required settings to use the embedded mysql
    mysql:
      host: "mysql.example.com"
      port: 3306
      auth:
        username: kubeflow
        password: password
        existingSecret: ""
        existingSecretUsernameKey: "username"
        existingSecretPasswordKey: "password"

    mysqlDatabases:
      cacheDatabase: kfp_cache
      metadataDatabase: kfp_metadata
      pipelinesDatabase: kfp_pipelines

  ## --------------------------------------
  ##          poddefaults-webhook
  ## --------------------------------------
  poddefaults_webhook:
    enabled: true

  ## --------------------------------------
  ##             tensorboards
  ## --------------------------------------
  tensorboards:
    enabled: true

  ## --------------------------------------
  ##           training-operator
  ## --------------------------------------
  training_operator:
    enabled: true

  ## --------------------------------------
  ##                volumes
  ## --------------------------------------
  volumes:
    enabled: true
