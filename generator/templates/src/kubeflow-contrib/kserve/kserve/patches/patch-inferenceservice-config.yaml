## NOTE: this is a patch for `ConfigMap/inferenceservice-config` (KServe's main config)
##       https://github.com/kserve/kserve/blob/v0.8.0/config/configmap/inferenceservice.yaml
##
apiVersion: v1
kind: ConfigMap
metadata:
  name: inferenceservice-config
  namespace: kubeflow
data:
  predictors: |-
    {
        "tensorflow": {
            "supportedFrameworks": [
              "tensorflow"
            ],
            "multiModelServer": false
        },
        "onnx": {
            "supportedFrameworks": [
              "onnx"
            ],
            "multiModelServer": false
        },
        "sklearn": {
          "v1": {
            "supportedFrameworks": [
              "sklearn"
            ],
            "multiModelServer": true
          },
          "v2": {
            "supportedFrameworks": [
              "sklearn"
            ],
            "multiModelServer": true
          }
        },
        "xgboost": {
          "v1": {
            "supportedFrameworks": [
              "xgboost"
            ],
            "multiModelServer": true
          },
          "v2": {
            "supportedFrameworks": [
              "xgboost"
            ],
            "multiModelServer": true
          }
        },
        "pytorch": {
          "supportedFrameworks": [
            "pytorch"
          ],
          "multiModelServer": false
        },
        "triton": {
            "supportedFrameworks": [
              "tensorrt",
              "tensorflow",
              "onnx",
              "pytorch"
            ],
            "multiModelServer": true
        },
        "pmml": {
            "supportedFrameworks": [
              "pmml"
            ],
            "multiModelServer": false
        },
        "lightgbm": {
            "supportedFrameworks": [
              "lightgbm"
            ],
            "multiModelServer": false
        },
        "paddle": {
            "supportedFrameworks": [
              "paddle"
            ],
            "multiModelServer": false
        }
    }
  transformers: |-
    {
    }
  explainers: |-
    {
        "alibi": {
            "image" : "kserve/alibi-explainer",
            "defaultImageVersion": "latest"
        },
        "aix": {
            "image" : "kserve/aix-explainer",
            "defaultImageVersion": "latest"
        },
        "art": {
            "image" : "kserve/art-explainer",
            "defaultImageVersion": "latest"
        }
    }
  storageInitializer: |-
    {
        "image" : "kserve/storage-initializer:latest",
        "memoryRequest": "100Mi",
        "memoryLimit": "1Gi",
        "cpuRequest": "100m",
        "cpuLimit": "1"
    }
  credentials: |-
    {
       "gcs": {
           "gcsCredentialFileName": "gcloud-application-credentials.json"
       },
       "s3": {
           "s3AccessKeyIDName": "AWS_ACCESS_KEY_ID",
           "s3SecretAccessKeyName": "AWS_SECRET_ACCESS_KEY"
       }
    }
  ingress: |-
    {
        "ingressDomain": "$(ingressDomain)",
        "ingressGateway": "$(istioGatewayNamespace)/$(istioGatewayName)",
        "ingressService": "$(istioGatewayServiceName).$(istioGatewayNamespace).svc.cluster.local",
        "localGateway": "$(knativeGatewayNamespace)/$(knativeGatewayName)",
        "localGatewayService": "$(knativeGatewayName).$(knativeGatewayNamespace).svc.cluster.local"
    }
  logger: |-
    {
        "image" : "kserve/agent:latest",
        "memoryRequest": "100Mi",
        "memoryLimit": "1Gi",
        "cpuRequest": "100m",
        "cpuLimit": "1",
        "defaultUrl": "http://default-broker"
    }
  batcher: |-
    {
        "image" : "kserve/agent:latest",
        "memoryRequest": "1Gi",
        "memoryLimit": "1Gi",
        "cpuRequest": "1",
        "cpuLimit": "1"
    }
  agent: |-
    {
        "image" : "kserve/agent:latest",
        "memoryRequest": "100Mi",
        "memoryLimit": "1Gi",
        "cpuRequest": "100m",
        "cpuLimit": "1"
    }
  deploy: |-
    {
      "defaultDeploymentMode": "Serverless"
    }
