---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: ml-pipeline-ui
  namespace: kubeflow
spec:
  rules:
    ## allow requests from `deploykf-istio-gateway` Pods
    - from:
        - source:
            principals:
              - "{{< .Values.clusterDomain >}}/ns/{{< .Values.deploykf_core.deploykf_istio_gateway.namespace >}}/sa/{{< .Values.deploykf_core.deploykf_istio_gateway.gatewayDeployment.serviceAccount.name >}}"
      to:
        - operation:
            ports:
              - "3000"

    ## allow requests from anywhere if the "authorization" HTTP header is set AND the "kubeflow-userid" is NOT set
    ##
    ## this allows access from within the cluster to the Kubeflow Pipelines REST API when an authorization token is
    ## passed in the "authorization" header, but prevents setting a "kubeflow-userid" header, which should only be
    ## set by traffic coming from the istio gateway
    - when:
        - key: request.headers[authorization]
          values:
            - "*"
        - key: request.headers[kubeflow-userid]
          notValues:
            - "*"
      to:
        - operation:
            ports:
              - "3000"
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: ml-pipeline
  namespace: kubeflow
spec:
  rules:
  - from:
    - source:
        principals:
        - {{< .Values.clusterDomain >}}/ns/kubeflow/sa/ml-pipeline
        - {{< .Values.clusterDomain >}}/ns/kubeflow/sa/ml-pipeline-ui
        - {{< .Values.clusterDomain >}}/ns/kubeflow/sa/ml-pipeline-persistenceagent
        - {{< .Values.clusterDomain >}}/ns/kubeflow/sa/ml-pipeline-scheduledworkflow
        - {{< .Values.clusterDomain >}}/ns/kubeflow/sa/ml-pipeline-viewer-crd-service-account
        - {{< .Values.clusterDomain >}}/ns/kubeflow/sa/kubeflow-pipelines-cache
  # For user workloads, which cannot user http headers for authentication
  - when:
    - key: request.headers[kubeflow-userid]
      notValues: ['*']
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: ml-pipeline-visualizationserver
  namespace: kubeflow
spec:
  rules:
  - from:
    - source:
        principals:
        - {{< .Values.clusterDomain >}}/ns/kubeflow/sa/ml-pipeline
        - {{< .Values.clusterDomain >}}/ns/kubeflow/sa/ml-pipeline-ui
        - {{< .Values.clusterDomain >}}/ns/kubeflow/sa/ml-pipeline-persistenceagent
        - {{< .Values.clusterDomain >}}/ns/kubeflow/sa/ml-pipeline-scheduledworkflow
        - {{< .Values.clusterDomain >}}/ns/kubeflow/sa/ml-pipeline-viewer-crd-service-account
        - {{< .Values.clusterDomain >}}/ns/kubeflow/sa/kubeflow-pipelines-cache
---
apiVersion: "networking.istio.io/v1alpha3"
kind: DestinationRule
metadata:
  name: ml-pipeline-ui
spec:
  host: ml-pipeline-ui.kubeflow.svc.{{< .Values.clusterDomain >}}
---
apiVersion: "networking.istio.io/v1alpha3"
kind: DestinationRule
metadata:
  name: ml-pipeline
spec:
  host: ml-pipeline.kubeflow.svc.{{< .Values.clusterDomain >}}
---
apiVersion: "networking.istio.io/v1alpha3"
kind: DestinationRule
metadata:
  name: ml-pipeline-visualizationserver
spec:
  host: ml-pipeline-visualizationserver.kubeflow.svc.{{< .Values.clusterDomain >}}
