apiVersion: apps/v1
kind: Deployment
metadata:
  name: argo-server
  labels:
    helm.sh/chart: {{ include "kubeflow-argo-workflows.labels.chart" . }}
    app.kubernetes.io/name: {{ include "kubeflow-argo-workflows.labels.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: argo
    app.kubernetes.io/sub-component: server
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "kubeflow-argo-workflows.labels.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/managed-by: {{ .Release.Service }}
      app.kubernetes.io/component: argo
      app.kubernetes.io/sub-component: server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "kubeflow-argo-workflows.labels.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/component: argo
        app.kubernetes.io/sub-component: server
    spec:
      {{- if .Values.server.image.pullSecret }}
      imagePullSecrets:
        - name: {{ .Values.server.image.pullSecret }}
      {{- end }}
      nodeSelector: {}
      affinity: {}
      tolerations: []
      serviceAccountName: argo-server
      securityContext: {}
      containers:
        - name: argo-server
          image: {{ .Values.server.image.repository }}:{{ .Values.server.image.tag }}
          imagePullPolicy: {{ .Values.server.image.pullPolicy }}
          securityContext:
            runAsUser: {{ .Values.server.image.uid }}
            runAsGroup: {{ .Values.server.image.gid }}
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          {{- if .Values.server.resources }}
          resources:
            {{- toYaml .Values.server.resources | nindent 12 }}
          {{- end }}
          args:
            - "server"
            - "--configmap"
            - "argo-config"
            - "--auth-mode"
            - "sso"
          env:
            - name: IN_CLUSTER
              value: "true"
            - name: ARGO_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: ARGO_SECURE
              ## the istio gateway provides HTTPS
              value: "false"
            ## TODO: we must manually set `POD_NAMES=v1` until kubeflow-pipelines supports argo-workflows 3.4+
            ##       https://github.com/kubeflow/pipelines/issues/8935
            - name: POD_NAMES
              value: v1
          ports:
            - name: http
              containerPort: 2746
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 20
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 3
            httpGet:
              path: /
              port: http
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 20
            timeoutSeconds: 3
            httpGet:
              path: /
              port: http
          volumeMounts:
            - name: tmp
              mountPath: /tmp
{{/*            {{- if .Values.deployKF_helpers.kubeflow_gateway.is_self_signed_cert }}*/}}
{{/*            - name: gateway-root-ca-cert*/}}
{{/*              mountPath: "/etc/argo-server/CAs/"*/}}
{{/*              readOnly: true*/}}
{{/*            {{- end }}*/}}
      volumes:
        - name: tmp
          emptyDir: {}
{{/*        {{- if .Values.deployKF_helpers.kubeflow_gateway.is_self_signed_cert }}*/}}
{{/*        - name: gateway-root-ca-cert*/}}
{{/*          configMap:*/}}
{{/*            name: {{ .Values.deployKF.certManager.clusterIssuer.selfSigned.injectedConfigMapName | quote }}*/}}
{{/*            items:*/}}
{{/*              - key: root-cert.pem*/}}
{{/*                path: root-cert.pem*/}}
{{/*        {{- end }}*/}}