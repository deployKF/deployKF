{{- define "deploykf-mysql.secret_list__env_vars" }}
## `mysql.rootUser` secret
{{- if .Values.mysql.rootUser.existingSecret }}
- {{ .Values.mysql.rootUser.existingSecret | quote }}
{{- end }}

## `mysql.kubeflowUser` secret
{{- if .Values.mysql.kubeflowUser.existingSecret }}
- {{ .Values.mysql.kubeflowUser.existingSecret | quote }}
{{- end }}

## `mysql.customUsers` secrets
{{- range $index, $user := .Values.mysql.customUsers }}
{{- if $user.existingSecret }}
- {{ $user.existingSecret | quote }}
{{- end }}
{{- end }}
{{- end }}
{{- $secret_list__env_vars := (include "deploykf-mysql.secret_list__env_vars" .) | fromYamlArray | uniq }}

{{- if $secret_list__env_vars }}
apiVersion: kyverno.io/v2beta1
kind: ClusterPolicy
metadata:
  name: deploykf-mysql--restart-on-secret-updates
  labels:
    helm.sh/chart: {{ include "deploykf-mysql.labels.chart" . }}
    app.kubernetes.io/name: {{ include "deploykf-mysql.labels.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  mutateExistingOnPolicyUpdate: false
  rules:
    - name: annotate-for-env-var-usage
      match:
        any:
          - resources:
              kinds:
                - Secret
              names: {{ $secret_list__env_vars | toJson }}
              namespaces:
                - {{ .Release.Namespace | quote }}
              operations:
                - CREATE
                - UPDATE
      mutate:
        targets:
          - apiVersion: apps/v1
            kind: StatefulSet
            namespace: {{ `"{{ request.namespace }}"` }}
        patchStrategicMerge:
          metadata:
            labels:
              <(helm.sh/chart): {{ (include "deploykf-mysql.labels.chart" .) | quote }}
          spec:
            template:
              metadata:
                annotations:
                  {{ `"secret-version/{{ request.object.metadata.name }}"` }}: {{ `"{{ request.object.metadata.resourceVersion || 'MISSING' }}"` }}
              spec:
                containers:
                  - env:
                      - valueFrom:
                          secretKeyRef:
                            <(name): {{ `"{{ request.object.metadata.name }}"` }}
{{- end }}