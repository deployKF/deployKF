deployKF:
  clusterDomain: cluster.local

  kubeflow:
    useridHeader: kubeflow-userid

    pipelines:
      enabled: {{< .Values.kubeflow_tools.pipelines.enabled | conv.ToBool >}}
      pipelineUI:
        namespace: kubeflow
        serviceAccount: ml-pipeline-ui

  gateway:
    namespace: {{< .Values.deploykf_core.deploykf_istio_gateway.namespace | quote >}}
    serviceAccount: {{< .Values.deploykf_core.deploykf_istio_gateway.serviceAccount.name | quote >}}


## configs for generated profiles
##
profileDefaults:

  ## a common prefix to add to all profile names
  ##  - NOTE: the profile name is also used as the namespace name
  ##
  profileNamePrefix: ""

  ## the default email to set as the OWNER of profiles
  ##
  ownerEmail: admin@example.com

  ## the default access given to members, if not specified
  ##
  memberAccess:

    ## the RBAC role to bind to the user
    ##  - "edit" -> `ClusterRole/kubeflow-edit` -> can view/create/delete resources
    ##  - "view" -> `ClusterRole/kubeflow-view` -> can only view resources
    ##
    role: view

    ## if the user can connect to notebooks in the profile
    notebooksAccess: false

  ## the default plugins for all profiles, if none are specified
  ##
  ## ____ EXAMPLE _______________
  ##  plugins:
  ##    ## EKS IRSA plugin
  ##    ##  https://github.com/kubeflow/kubeflow/blob/v1.6.1/components/profile-controller/controllers/plugin_iam.go#L30
  ##    - kind: AwsIamForServiceAccount
  ##      spec:
  ##        awsIamRole: arn:aws:iam::000000000000:role/MY_ROLE_NAME
  ##    ## GKE WorkloadIdentity plugin
  ##    ##  https://github.com/kubeflow/kubeflow/blob/v1.6.1/components/profile-controller/controllers/plugin_workload_identity.go#L39
  ##    - kind: WorkloadIdentity
  ##      spec:
  ##        gcpServiceAccount: SA_NAME@PROJECT_ID.iam.gserviceaccount.com
  ##
  plugins: {}

  ## the resource quota for this profile
  ## - spec for ResourceQuotaSpec:
  ##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.24/#resourcequotaspec-v1-core
  ##
  resourceQuotaSpec: {}


## user details
##
users:
  user-1:
    email: user1@example.com
  user-2:
    email: user2@example.com


## profiles to create
##
profiles:

  ## EXAMPLE: a profile called "team-1"
  ##
  team-1:
    ## override the `profileDefaults.ownerEmail` for this specific profile
    ##
    #ownerEmail: admin@example.com

    ## the list of members and their access to this profile
    ##  - `user`: the name of the user, from the `users` section
    ##  - `role`: the RBAC role to bind to the user ("edit" or "view")
    ##  - `notebooksAccess`: if the user can connect to notebooks in the profile
    ##
    members:
      - user: user-1
        role: edit
        notebooksAccess: true
      - user: user-2
        role: edit
        notebooksAccess: true

    ## the list of plugins to apply to this profile
    ##
    plugins: []

    ## the resource quota for this profile
    ##
    resourceQuotaSpec: {}

  ## EXAMPLE: a profile called "team-1-prod"
  ##
  team-1-prod:

    ## the list of members and their access to this profile
    ##
    members:
      - user: user-1
        role: view
        notebooksAccess: false
      - user: user-2
        role: view
        notebooksAccess: false
