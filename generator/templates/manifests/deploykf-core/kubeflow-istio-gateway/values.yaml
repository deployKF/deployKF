deployKF:
  clusterDomain: cluster.local

  kubeflow:
    namespace: kubeflow
    useridHeader: kubeflow-userid

  certManager:
    clusterIssuer:
      issuerName: {{< .Values.deploykf_dependencies.cert_manager.clusterIssuer.issuerName | quote >}}

  argoWorkflows:
    enabled: {{< .Values.kubeflow_dependencies.kubeflow_argo_workflows.enabled >}}
    namespace: {{< .Values.kubeflow_dependencies.kubeflow_argo_workflows.namespace | quote >}}

  auth:
    namespace: {{< .Values.deploykf_core.kubeflow_auth.namespace | quote >}}

  gateway:
    name: {{< .Values.deploykf_core.kubeflow_istio_gateway.gateway.name | quote >}}
    selectorLabels: {{< .Values.deploykf_core.kubeflow_istio_gateway.gateway.selectorLabels | toJSON >}}
    hostname: {{< .Values.deploykf_core.kubeflow_istio_gateway.gateway.hostname | quote >}}
    ports:
      http: {{< .Values.deploykf_core.kubeflow_istio_gateway.gateway.ports.http >}}
      https: {{< .Values.deploykf_core.kubeflow_istio_gateway.gateway.ports.https >}}
    tls:
      enabled: {{< .Values.deploykf_core.kubeflow_istio_gateway.gateway.tls.enabled >}}
    enableProxyProtocol: {{< .Values.deploykf_core.kubeflow_istio_gateway.gateway.enableProxyProtocol >}}
    xffNumTrustedHops: {{< .Values.deploykf_core.kubeflow_istio_gateway.gateway.xffNumTrustedHops >}}

  minio:
    enabled: {{< .Values.deploykf_opt.kubeflow_minio.enabled >}}
    namespace: {{< .Values.deploykf_opt.kubeflow_minio.namespace | quote >}}

## we reference the "gateway" chart (https://istio-release.storage.googleapis.com/charts) in `dependencies` of Chart.yaml
## we must indent our values under `gateway:` in this file
gateway:
  name: {{< .Values.deploykf_core.kubeflow_istio_gateway.service.name | quote >}}

  replicaCount: {{< .Values.deploykf_core.kubeflow_istio_gateway.deployment.replicaCount >}}

  serviceAccount:
    name: {{< .Values.deploykf_core.kubeflow_istio_gateway.serviceAccount.name | quote >}}
    annotations: {{< .Values.deploykf_core.kubeflow_istio_gateway.serviceAccount.annotations | toJSON >}}

  service:
    annotations: {{< .Values.deploykf_core.kubeflow_istio_gateway.service.annotations | toJSON >}}

    type: LoadBalancer
    loadBalancerIP: ""
    loadBalancerSourceRanges: []
    externalTrafficPolicy: ""
    externalIPs: []

    ports:
      - name: status-port
        port: 15021
        protocol: TCP
        targetPort: 15021
      - name: http
        port: {{< .Values.deploykf_core.kubeflow_istio_gateway.gateway.ports.http >}}
        protocol: TCP
        targetPort: {{< .Values.deploykf_core.kubeflow_istio_gateway.gateway.ports.http >}}
      - name: https
        port: {{< .Values.deploykf_core.kubeflow_istio_gateway.gateway.ports.https >}}
        protocol: TCP
        targetPort: {{< .Values.deploykf_core.kubeflow_istio_gateway.gateway.ports.https >}}

  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 2000m
      memory: 1024Mi

  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80

  podAnnotations:
    prometheus.io/port: "15020"
    prometheus.io/scrape: "true"
    prometheus.io/path: "/stats/prometheus"
    inject.istio.io/templates: "gateway"
    sidecar.istio.io/inject: "true"

  securityContext: ~
  containerSecurityContext: ~

  nodeSelector: {}
  tolerations: []
  affinity: {}

  # Pod environment variables
  env: {}

  # Labels to apply to all resources
  labels: {}

  # Annotations to apply to all resources
  annotations: {}